{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/timus/Desktop/graphql-app/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n\\tmutation($name: String!, $age: Number!) {\\n\\t\\taddSinger(name: $name, age: $age) {\\n\\t\\tname, age}\\n\\t}\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n\\tmutation ($name: String!, $genre: String!, $authorid: ID!) {\\n\\t\\taddSong(name: $name, genre: $genre, authorid: $authorid) {\\n\\t\\t\\tname,\\n\\t\\t\\tgenre\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n\\tquery($id: ID) {\\n\\t\\tsong(id: $id) {\\n\\t\\t\\tid\\n\\t\\t\\tname\\n\\t\\t\\tgenre\\n\\t\\t\\tsinger {\\n\\t\\t\\t\\tname\\n\\t\\t\\t\\tage\\n\\t\\t\\t\\tid\\n\\t\\t\\t\\tsongs {\\n\\t\\t\\t\\t\\tname\\n\\t\\t\\t\\t\\tgenre\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\t{\\n\\t\\tsingers {\\n\\t\\t\\tname,\\n\\t\\t\\tid\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\t{\\n\\t\\tsongs {\\n\\t\\t\\tid, \\n\\t\\t\\tname,\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nconst getSongs = gql(_templateObject());\nconst getSingers = gql(_templateObject2());\nconst getSong = gql(_templateObject3());\nconst addingSong = gql(_templateObject4());\nconst addingSinger = gql(_templateObject5());\nexport { getSongs, getSingers, addingSong, addingSinger, getSong };","map":{"version":3,"sources":["/home/timus/Desktop/graphql-app/client/src/queries/queries.js"],"names":["gql","getSongs","getSingers","getSong","addingSong","addingSinger"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAQA,GAAR,QAAkB,cAAlB;AAEA,MAAMC,QAAQ,GAAGD,GAAH,mBAAd;AAQA,MAAME,UAAU,GAAGF,GAAH,oBAAhB;AAQA,MAAMG,OAAO,GAAGH,GAAH,oBAAb;AAkBA,MAAMI,UAAU,GAAGJ,GAAH,oBAAhB;AAQA,MAAMK,YAAY,GAAGL,GAAH,oBAAlB;AAOA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BE,UAA/B,EAA2CC,YAA3C,EAAyDF,OAAzD","sourcesContent":["import {gql} from 'apollo-boost';\n\nconst getSongs = gql`\n\t{\n\t\tsongs {\n\t\t\tid, \n\t\t\tname,\n\t\t}\n\t}\n`\nconst getSingers = gql`\n\t{\n\t\tsingers {\n\t\t\tname,\n\t\t\tid\n\t\t}\n\t}\n`\nconst getSong = gql`\n\tquery($id: ID) {\n\t\tsong(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\tgenre\n\t\t\tsinger {\n\t\t\t\tname\n\t\t\t\tage\n\t\t\t\tid\n\t\t\t\tsongs {\n\t\t\t\t\tname\n\t\t\t\t\tgenre\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\nconst addingSong = gql`\n\tmutation ($name: String!, $genre: String!, $authorid: ID!) {\n\t\taddSong(name: $name, genre: $genre, authorid: $authorid) {\n\t\t\tname,\n\t\t\tgenre\n\t\t}\n\t}\n`\nconst addingSinger = gql`\n\tmutation($name: String!, $age: Number!) {\n\t\taddSinger(name: $name, age: $age) {\n\t\tname, age}\n\t}\n`\n\nexport { getSongs, getSingers, addingSong, addingSinger, getSong }\n"]},"metadata":{},"sourceType":"module"}